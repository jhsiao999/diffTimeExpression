{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Example_time_series_example_comparison\"\noutput:\n  html_document:\n    css: ../layout/floating-toc.css\n    toc: true\n---\n\n\n**Last updated:** `r Sys.Date()`\n\n**Code version:** `r system(\"git log -1 --format='%H'\", intern = TRUE)`\n\n```{r chunk-options, include=FALSE}\nsource(\"../layout/chunk-options.R\")\n```\n\n\nThe goal of this section is to compare the results from edge (df = 2) and maSigPro (df = 2) for the endotoxin data.\n\n```{r}\n# Load libraries\n\nlibrary(\"Hmisc\")\nlibrary(\"formattable\")\n\n# Load data\n\n# p-values from edge\n\np_value_endo_genes_edge_data <- read.csv(\"../data/p_value_endo_genes_edge_data.txt\", sep=\"\")\n\n# p-values from maSigPro (df = 2)\n\np_value_maSigPro_df_2 <- read.csv(\"../data/p_value_maSigPro_df_2.txt\", sep=\"\")\n\n# p-values from maSigPro (df = 5)\n\np_value_maSigPro_df_5 <- read.csv(\"../data/p_value_maSigPro_df_5.txt\", sep=\"\")\n```\n\n\n## Compare unadjusted p-values from edge and maSigPro (df= 2)\n\n```{r}\n# Combine the two lists of unadjusted p-values into one data frame\nunadjust_p_value <- as.data.frame(cbind(p_value_endo_genes_edge_data, p_value_maSigPro_df_2))\ncolnames(unadjust_p_value) <- c(\"Unadjusted p-value in edge (df = 2)\", \"Unadjusted p-value in maSigPro (df = 2)\")\n\n# Find the correlation between the two numbers\n\nrc <- rcorr(as.matrix(unadjust_p_value), type=\"pearson\") # Correlation = 0.3766195 and p = approximately 0\n\nflattenCorrMatrix <- function(cormat, pmat) {\n  ut <- upper.tri(cormat)\n  data.frame(\n    row = rownames(cormat)[row(cormat)[ut]],\n    column = rownames(cormat)[col(cormat)[ut]],\n    cor  =(cormat)[ut],\n    p = pmat[ut]\n    )\n}\n\nflattenCorrMatrix(rc$r, rc$P)\n\n# Compare unadjusted p-values from edge and maSigPro\n\nplot(unadjust_p_value, main = \"Unadjusted p-values from edge and maSigPro (Pearson's correlation = 0.377)\")\n\n# Make a best fit line (which we can then add to the plot)\nabline(lm(unadjust_p_value[,1] ~ unadjust_p_value[,2]))\n\n```\n\nFrom this plot, it appears that edge is more conservative than maSigPro when df = 2.\n\n\n## Compare unadjusted p-values from edge and maSigPro (df= 5)\n\n```{r}\n# Combine the two lists of unadjusted p-values into one data frame\nunadjust_p_value <- as.data.frame(cbind(p_value_endo_genes_edge_data, p_value_maSigPro_df_5))\ncolnames(unadjust_p_value) <- c(\"Unadjusted p-values in edge (df = 2)\", \"Unadjusted p-values in maSigPro (df = 5)\")\n\n# Find the correlation between the two numbers\n\nrc <- rcorr(as.matrix(unadjust_p_value), type=\"pearson\") # Correlation = 0.3235 and p = 1.203482e-13\n\nflattenCorrMatrix(rc$r, rc$P)\n\n# Compare unadjusted p-values from edge and maSigPro\n\nplot(unadjust_p_value, main = \"Unadjusted p-values from edge and maSigPro (Pearson's correlation = 0.324)\")\n\n# Make a best fit line (which we can then add to the plot)\nabline(lm(unadjust_p_value[,1] ~ unadjust_p_value[,2]))\n\n```\n\nThe correlation for unadjusted p-values is higher in edge and maSigPro when df = 2 in maSigPro\n\n## Compare Benjamini-Hotchberg corrected p-values from the two software programs\n\n```{r}\n# Make Benjamini-Hotchberg correction for each set of the unadjusted p-values\n\nedge_fdr <- p.adjust(as.matrix(p_value_endo_genes_edge_data), method = \"fdr\", n = 500)\nsummary(edge_fdr)\n\nmaSigPro_fdr <- p.adjust(as.matrix(p_value_maSigPro_df_2), method = \"fdr\", n = 500)\nsummary(maSigPro_fdr)\n\n# Combine the two lists of adjusted p-values into one data frame\n\nadjusted_p_value <- as.data.frame(cbind(edge_fdr, maSigPro_fdr))\ncolnames(adjusted_p_value) <- c(\"BH adjusted p-values in edge (df = 2)\", \"BH adjusted p-values in maSigPro (df = 2)\")\n\n# Find the correlation between the two numbers\n\nrc <- rcorr(as.matrix(adjusted_p_value), type=\"pearson\") # Correlation = 0.4421 and p equals approximately 0\n\nflattenCorrMatrix(rc$r, rc$P)\n\n# Compare unadjusted p-values from edge and maSigPro\n\nplot(adjusted_p_value, main = \"BH adjusted p-values from edge and maSigPro (Pearson's corr. = 0.4421)\")\n\n# Make a best fit line (which we can then add to the plot)\nabline(lm(adjusted_p_value[,1] ~ adjusted_p_value[,2]))\n\n```\n\n## Compare the number of genes at FDR 1% and FDR 10% for both software programs\n\n```{r}\n# Find the number of significant genes at FDR 1%\n\nlength(edge_fdr[edge_fdr<=0.01]) # 10 genes\nlength(maSigPro_fdr[maSigPro_fdr<=0.01]) #135 genes\n\n# Find overlap\n\noverlap_0.01 <- adjusted_p_value[adjusted_p_value[,1] <= 0.01 & adjusted_p_value[,2] <= 0.01, ]\n\nnrow(overlap_0.01)\n\n# Find the number of significant genes at FDR 10%\n\nlength(edge_fdr[edge_fdr<=0.1]) #61 genes\nlength(maSigPro_fdr[maSigPro_fdr<=0.1]) # 196 genes\n\noverlap_0.1 <- adjusted_p_value[adjusted_p_value[,1] <= 0.1 & adjusted_p_value[,2] <= 0.1, ]\n\nnrow(overlap_0.1)\n\n# Make a table of the results\n\nDF <- data.frame(Program=c(\"edge\", \"maSigPro\", \"Genes in common\"), FDR_0.01=c(\"10\", \"135\", \"10\"), FDR_0.1=c(\"61\", \"196\", \"55\"))\nformattable(DF)\n\n```\n\n\n\n\n\n## Compare the number of DE genes\n\n\n\n\n## Compare the p-values and q-values of the genes that were statistically significant in both programs\n\n\n\n## Session information\n\n```{r info, echo = FALSE}\nsessionInfo()\n```\n\n",
    "created" : 1471369152504.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1669317382",
    "id" : "5BF68992",
    "lastKnownWriteTime" : 1471369253,
    "last_content_update" : 1471369253940,
    "path" : "~/Dropbox/GitHub/diffTimeExpression/analysis/Example_times_series_example_comparison.Rmd",
    "project_path" : "Example_times_series_example_comparison.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}